Arvores --
Para a criação da arvore tem como base a struct cujo vai dar a base do node
inicial e com isso expandindo para direita e esquerda(segue código abaixo):
----------------
typedef struct Node{// arvore
int data;//campo que vou guardar
struct Node*left;//ponteiro apontando para esquerda
struct Node*right//ponteiro apontando para direita
}
Node;
-----------------
Node*insert(Node*raiz,int data){//Recebe o ponteiro da raiz e o valor a inserir
Node*temp = (Node*) malloc(sizeof(Node));//instancia de node temporaria
temp->data = data;//o valor do campo data sendo recebido pelo temp
temp->left = NULL;//inicializar
temp->right = NUll;//inicializar
if(raiz== NULL){//se root for vazio
raiz = temp //root recebe o valor da temp
}
else{
Node*atual = root;//aponta pro node do root
Node*pai = NULL;//ponteiro pai
while(1){
pai = atual;// variavel pai recebe o proximo numero
if(data<pai->data){//se o numero atual for menor que o pai
atual = atual->left;//aponta pra esquerda do node atual
if(atual == NULL){
pai->left = temp;//ponteiro a esquerda do pai aponta pro temp
return raiz;// sai do loop
}
}
else{
atual = atual->right;//aponta pra direita do node atual
if(atual == NULL){//se for nulo 
pai->right = temp;//ponteiro a direita do pai aponta pro temp
return raiz; //sair do loop
}
}
}
}
return raiz;//retorna o valor ja inserido
}
------------------
void inorder(struct Node* raiz){
if(raiz){//se node nao for nulo
inorder(raiz->left);//chama ela mesma a esquerda
prinft("%d\n",raiz->data);//vai printar o ultimo 0
inorder(raiz->right);//chama ela mesma a direita
------------------
int main(){
int i;
int array[x] =
{x numeros};
Node*raiz = NULL;//!!esta definido somente Node pois foi criado como typedef struct
ou seja criado como novo tipo,node é a mesma coisa que struct node

for(i = 0; i<x  ; i++){//um loop para inserir todos numeros
raiz = insert(raiz,array[i]);//uma função chamada insert com os parametros
1-endereço da raiz que começa nulo e ela devolve o endereço da raiz quando popular
2-array na posição da lista
printf("inserido:%d\n",array[i]);
printf("inorder:\n");
inorder(root);
return 0;
}

int temp = search(root,88)//função de busca cujo recebe os parametros de endereço da raiz
e numero cujo eu busco 



